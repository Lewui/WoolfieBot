import { Command } from "../../domain/Command";
import { Message, MessageEmbed, GuildMember } from "discord.js";
import { client } from "../../main";
import { DateTime } from "luxon";
import humanizeDuration from "humanize-duration";
import { UserProfileData, CooldownObject } from "../../domain/ObjectModels";

class Balance extends Command {
    constructor(){
        super({
            name: "balance",
            description: "–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–ª–∏—á–∫–∏ –∏ –±–∞–Ω–∫–∞.",
            aliases: ["b","bal"],
            category: "info",
            usage: ">balance"
        });
    }

    async run(message: Message, args: Array<string>) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω –ª–∏ —Ä–∞–Ω–∫–∏–Ω–≥
        const guild: any = await client.provider.getGuild(message.guild!.id);
        if(guild.isLvl === 0) return message.channel.send(`–ù–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –æ—Ç–∫–ª—é—á—ë–Ω —Ä–∞–Ω–∫–∏–Ω–≥.`);

        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        var member: GuildMember = await client.provider.getMember(message, args.join(" "));
        var profile: UserProfileData = await client.provider.getProfile(message.guild!.id,member.id)

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        if(profile === null){
            const roles: any = member?.roles.cache
                .filter((r: any) => r.id !== message.guild?.id)
                .map((r:any) => r.id).join(", ") || 'none';

            await client.provider.createProfile(message.guild!.id,member.id,member.user.username,member!.displayName,roles)
            profile = await client.provider.getProfile(message.guild!.id,member.id)
        }

        var bankMax: number = 10000 + (5000 * profile.bankLvl);

        let string: string;

        let cd: CooldownObject = await client.provider.getCooldown(message.guild!.id,member.id,"DAILY");

        if(cd == null) {
            string = "–ü–æ—Ä–∞ –∑–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å!"
        }else{
            var k: number = DateTime.fromJSDate(cd.expiresAt).toMillis() - DateTime.fromJSDate(new Date()).toMillis()
            if( k < 0 ){ 
                string = "–ü–æ—Ä–∞ –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å!"
            }else{
                string = humanizeDuration(k,
                    {
                        language: "ru",
                        delimiter: " –∏ ",
                        largest: 2,
                        round: true}
                    )
            }            
        }

        const embed: MessageEmbed = new MessageEmbed()
            .setTitle(`üí∞–ë–∞–Ω–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${member.displayName}`)
            .setDescription(`üè¶**–ë–∞–ª–∞–Ω—Å:** ${profile.bank}/${bankMax}\nüí∏**–ù–∞–ª–∏—á–Ω—ã–µ:** ${profile.coins}\n‚è∞**–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å:** \`${string}\``)
            .setTimestamp()
            .setFooter(`Woolfie 2020 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞–≥–∞–≤–∫–∞–Ω—ã.`,(message.guild?.iconURL({format:'png'}) as string))
        await message.channel.send(embed)
    }
}
export = Balance;